;				be kind to Emacs users -*-conf-windows-*-
name    = Dist-Zilla-Plugin-Git
author  = Jerome Quelin
license = Perl_5
copyright_holder = Jerome Quelin
copyright_year   = 2009

; During development, you may want to comment out Bootstrap::lib.
; Otherwise, bugs in your new code can keep "dzil test" from running.
[Bootstrap::lib]

[@Author::ETHER]
:version = 0.094
Test::MinimumVersion.max_target_perl = 5.010
installer = none    ; see below
-remove = Test::NoTabs
-remove = Test::PodSpelling

[MakeMaker::Awesome]
:version = 0.27
delimiter = |
header = |# Git 1.5.4 introduced the --exclude-standard option to git ls-files,
header = |# which Git::Check needs to work properly.
header = |use version;
header = |my $need_version = version->parse('1.5.4');
header = |eval {
header = |  my $git_version = `git --version` or die "Unable to execute git\n";
header = |  $git_version =~ /git \s+ version \s* ( \d+ (?: \.\d+ )+ )( [-.]rc\d+)?/x
header = |      or die "Unable to determine git version\n";
header = |  my $rc = $2 || '';
header = |
header = |  $git_version = version->parse("$1");
header = |  die "git $need_version or later required, you have $git_version$rc\n"
header = |      if $git_version < $need_version or $git_version == $need_version and $rc;
header = |  1;
header = |} or do {
header = |  print $@;
header = |
header = |  if (parse_args()->{FORCE_INSTALL}) {
header = |    print "FORCE_INSTALL specified, attempting to install anyway.\n";
header = |  } else {
header = |    print <<"END MESSAGE";
header = |\nDist::Zilla::Plugin::Git requires git $need_version or later in your PATH,
header = |and it wasn't found.  If you want to install anyway, run
header = |
header = |  PERL_MM_OPT=FORCE_INSTALL $^X Makefile.PL
header = |END MESSAGE
header = |
header = |    exit 0;                  # Indicate missing non-Perl prerequisite
header = |  } # end else not FORCE_INSTALL
header = |}; # end do when Git prerequisite is not met
header = |
header = |sub parse_args {
header = |  require ExtUtils::MakeMaker;
header = |  require Text::ParseWords;
header = |  ExtUtils::MakeMaker::parse_args(
header = |    my $tmp = {},
header = |    Text::ParseWords::shellwords($ENV{PERL_MM_OPT} || ''),
header = |    @ARGV,
header = |  );
header = |  return $tmp->{ARGS} || {};
header = |}

[Prereqs / ConfigureRequires]
version = 0
Text::ParseWords = 0

[Prepender]
[Covenant]

[Encoding]
encoding = bytes
match = ^corpus/

; -- static meta-information
[MetaResources]
x_IRC = irc://irc.perl.org/#distzilla
x_MailingList = http://www.listbox.com/subscribe/?list_id=139292

[Breaks]
Dist::Zilla::App::CommandHelper::ChainSmoking = <= 1.04
[Test::CheckBreaks]
